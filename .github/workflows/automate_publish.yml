# NPM Publish is the name for this action
name: NPM Publish

# This action will trigger on every successful release 
on:
  pull_request:
    types: [closed]
    branches:
      - dev


# Job will run on a ubuntu instance
jobs:
  build:
    if: github.event.pull_request.merged == true && contains(github.head_ref, 'release')
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:

      # Checkout the code
    - uses: actions/checkout@v2
      # Setup node with version 12.x and NPM registry url

    - uses: actions/setup-node@v1
      with:
          registry-url: "https://registry.npmjs.org"

    - uses: dorny/paths-filter@v2
      id: changes
      with:
          filters: |
            core:
              - 'lib/msal-core/src/packageMetadata.ts'
            common: 
              - 'lib/msal-common/src/packageMetadata.ts'
            browser: 
              - 'lib/msal-browser/src/packageMetadata.ts'
            node:
              - 'lib/msal-node/src/packageMetadata.ts'
            angular:
              - 'lib/msal-angular/src/packageMetadata.ts'
            react:
              - 'lib/msal-react/src/packageMetadata.ts'
          list-files: json   

    - name: Printing changed services
      run: |
        for val in ${{ join(fromJson(steps.changes.outputs.changes), ' ') }}; do echo $val; done

    # Run  install to install project packages
    - name : Install npm 
      env:
        RUNNING_NODE_CI: 1
      run: npm ci
              
    - name: Publish  msal-core
      if: steps.changes.outputs.core == 'true'
      working-directory: lib/msal-core
      run:
        npm publish --dry-run

    - name: Publish  msal-common
      if: steps.changes.outputs.common == 'true'
      working-directory: lib/msal-common
      run:
        npm publish --dry-run

    - name: Publish  msal-browser
      if: steps.changes.outputs.browser == 'true'
      working-directory: lib/msal-browser
      run:
        npm publish --dry-run

    - name: Publish  msal-node
      if: steps.changes.outputs.node == 'true'
      working-directory: lib/msal-node
      run:
        npm publish --dry-run

    - name: Publish  msal-angular
      if: steps.changes.outputs.angular == 'true'
      working-directory: lib/msal-angular
      run:
        npm publish --dry-run

    - name: Publish  msal-react
      if: steps.changes.outputs.react == 'true'
      working-directory: lib/msal-react
      run:
        npm publish --dry-run

  master:
    needs: build
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      # Check-out repo
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: master
        
      - name: Reset promotion branch
        run: |
          git fetch origin dev:dev
          git reset --hard dev

      # Create Pull Request from dev to master for sync post-publish
      - name: Create Pull Request
        id: pr
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Post-release dev-master sync
          branch: dev
          base: master
          title: 'Update master from dev post-release' 
          body: |
            Master-dev sync PR : This PR aims to bring master up-to-date with latest dev changes post successful publish. 
          draft: false
